#
# Copyright 2013-2019 the original author or authors from the JHipster project.
#
# This file is part of the JHipster project, see https://www.jhipster.tech/
# for more information.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

schedules:
- cron: "0 14 * * *"
  displayName: JDLMs.Keycloak
  branches:
    include:
    - master
jobs:
- job: Test
  pool:
    vmImage: 'ubuntu-18.04'
  variables:
    JHI_PROFILE: prod
    JHI_RUN_APP: 1
    JHI_PROTRACTOR: 1
    JHI_ENTITY: jdl
    JHI_JDK: '11'
    # if JHI_LIB_BRANCH value is release, use the release from Maven
    JHI_LIB_REPO: https://github.com/SudharakaP/jhipster.git
    JHI_LIB_BRANCH: chromedriver-upgrade-test
    # if JHI_GEN_BRANCH value is release, use the release from NPM
    JHI_GEN_REPO: https://github.com/SudharakaP/generator-jhipster.git
    JHI_GEN_BRANCH: master
    # specific config
    SPRING_OUTPUT_ANSI_ENABLED: NEVER
    SPRING_JPA_SHOW_SQL: false
    JHI_DISABLE_WEBPACK_LOGS: true
    JHI_E2E_HEADLESS: true
    JHI_LOCAL_SCRIPTS: $(Build.SourcesDirectory)/test-integration/jdl-scripts

  strategy:
    matrix:
      eureka-oauth2-mysql-hazelcast:
        JHI_APP: eureka-oauth2-mysql-hazelcast
        JHI_ENTITY: jdl
      eureka-oauth2-mariadb-hazelcast:
        JHI_APP: eureka-oauth2-mariadb-hazelcast
        JHI_ENTITY: jdl
      consul-oauth2-mysql-hazelcast:
        JHI_APP: consul-oauth2-mysql-hazelcast
        JHI_ENTITY: jdl
      consul-oauth2-mariadb-hazelcast:
        JHI_APP: consul-oauth2-mariadb-hazelcast
        JHI_ENTITY: jdl
      eureka-oauth2-mysql-ehcache:
        JHI_APP: eureka-oauth2-mysql-ehcache
        JHI_ENTITY: jdl
      eureka-oauth2-mariadb-ehcache:
        JHI_APP: eureka-oauth2-mariadb-ehcache
        JHI_ENTITY: jdl
      consul-oauth2-mysql-ehcache:
        JHI_APP: consul-oauth2-mysql-ehcache
        JHI_ENTITY: jdl
      consul-oauth2-mariadb-ehcache:
        JHI_APP: consul-oauth2-mariadb-ehcache
        JHI_ENTITY: jdl
      eureka-oauth2-mysql-no:
        JHI_APP: eureka-oauth2-mysql-no
        JHI_ENTITY: jdl
      eureka-oauth2-mariadb-no:
        JHI_APP: eureka-oauth2-mariadb-no
        JHI_ENTITY: jdl

  steps:
  #----------------------------------------------------------------------
  # Install all tools and check configuration
  #----------------------------------------------------------------------
  - task: NodeTool@0
    inputs:
      versionSpec: '10.15.3'
    displayName: 'TOOLS: install Node.js'
  - script: |
      if [[ $JHI_JDK = '11' ]]; then
        echo '*** Using OpenJDK 11'
        sudo add-apt-repository ppa:openjdk-r/ppa
        sudo apt-get update
        sudo apt-get install -y openjdk-11-jdk
        sudo update-java-alternatives -s java-1.11.0-openjdk-amd64
        java -version
      else
        echo '*** Using OpenJDK 8'
        sudo add-apt-repository ppa:openjdk-r/ppa
        sudo apt-get update
        sudo apt-get install -y openjdk-8-jdk
        sudo update-java-alternatives -s java-1.8.0-openjdk-amd64
        java -version
      fi
    displayName: 'TOOLS: configuring OpenJDK'
  - script: |
      sudo chmod o+w /etc/hosts
      sudo echo "127.0.0.1	keycloak" >> /etc/hosts
    displayName: 'TOOLS: configuring /etc/hosts for keycloak usage'
  - script: |
      wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
      sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
      sudo apt update
      sudo apt install google-chrome-stable
      CHROME_DRIVER_VERSION=`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`
      wget -q http://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip
      unzip chromedriver_linux64.zip
      sudo mv chromedriver /usr/bin/chromedriver
      sudo chown root:root /usr/bin/chromedriver
      sudo chmod +x /usr/bin/chromedriver
    displayName: 'TOOLS: install google-chrome-stable'
  - script: npm install -g npm
    displayName: 'TOOLS: update NPM'
  - script: npm install -g yarn
    displayName: 'TOOLS: install Yarn'
  - script: |
      cd $(Build.SourcesDirectory)/test-integration/jdl-samples
      npm i
      npm start
    displayName: 'TOOLS: generating jdl-samples'
  - bash: $(JHI_LOCAL_SCRIPTS)/01-display-configuration.sh
    displayName: 'TOOLS: display configuration'
  - bash: $(JHI_LOCAL_SCRIPTS)/03-system.sh
    displayName: 'TOOLS: configure tools installed by the system'
  - bash: $(JHI_LOCAL_SCRIPTS)/04-git-config.sh
    displayName: 'TOOLS: configure git'

  #----------------------------------------------------------------------
  # Install JHipster and generate project+entities
  #----------------------------------------------------------------------
  - bash: $(JHI_LOCAL_SCRIPTS)/10-install-jhipster-daily-builds.sh
    displayName: 'GENERATION: install JHipster'
  - bash: $(JHI_LOCAL_SCRIPTS)/12-generate-project.sh
    displayName: 'GENERATION: project'
  - bash: $(JHI_LOCAL_SCRIPTS)/13-replace-version-generated-project.sh
    displayName: 'GENERATION: replace version in generated project'
  - bash: $(JHI_LOCAL_SCRIPTS)/14-jhipster-info.sh
    displayName: 'GENERATION: jhipster info'

  #----------------------------------------------------------------------
  # Launch tests
  #----------------------------------------------------------------------
  - bash: $(JHI_LOCAL_SCRIPTS)/23-package.sh
    displayName: 'TESTS: packaging'
  - bash: $(JHI_LOCAL_SCRIPTS)/24-deploy-with-docker-compose.sh
    displayName: 'TESTS: Deploying with docker-compose files'
  - bash: $(JHI_LOCAL_SCRIPTS)/25-tests-e2e-docker-compose.sh
    displayName: 'TESTS: End-to-End (Docker-Compose)'
